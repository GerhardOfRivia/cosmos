"use strict";(self.webpackChunkdocs_openc3_com=self.webpackChunkdocs_openc3_com||[]).push([[5874],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>y});var o=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,a=function(e,t){if(null==e)return{};var r,o,a={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=o.createContext({}),s=function(e){var t=o.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=s(e.components);return o.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(r),d=a,y=u["".concat(p,".").concat(d)]||u[d]||m[d]||n;return r?o.createElement(y,i(i({ref:t},c),{},{components:r})):o.createElement(y,i({ref:t},c))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,i=new Array(n);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<n;s++)i[s]=r[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2287:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>n,metadata:()=>l,toc:()=>s});var o=r(7462),a=(r(7294),r(3905));const n={title:"Raspberry Pi"},i=void 0,l={unversionedId:"guides/raspberrypi",id:"guides/raspberrypi",title:"Raspberry Pi",description:"COSMOS Running on Raspberry Pi 4",source:"@site/docs/guides/raspberrypi.md",sourceDirName:"guides",slug:"/guides/raspberrypi",permalink:"/docs/guides/raspberrypi",draft:!1,editUrl:"https://github.com/OpenC3/cosmos/tree/main/docs.openc3.com/docs/guides/raspberrypi.md",tags:[],version:"current",frontMatter:{title:"Raspberry Pi"},sidebar:"defaultSidebar",previous:{title:"Performance",permalink:"/docs/guides/performance"},next:{title:"Script Writing Guide",permalink:"/docs/guides/script-writing"}},p={},s=[{value:"COSMOS Running on Raspberry Pi 4",id:"cosmos-running-on-raspberry-pi-4",level:3}],c={toc:s},u="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,o.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"cosmos-running-on-raspberry-pi-4"},"COSMOS Running on Raspberry Pi 4"),(0,a.kt)("p",null,"The Raspberry Pi 4 is a low-cost powerful ARM-based minicomputer that runs linux. And because it runs modern linux, it can also run COSMOS! These directions will get you up and running."),(0,a.kt)("p",null,"What you'll need:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Raspberry Pi 4 board (tested with 8GB RAM)"),(0,a.kt)("li",{parentName:"ul"},"A Pi Case but Optional"),(0,a.kt)("li",{parentName:"ul"},"Raspbeerry Pi Power Supply"),(0,a.kt)("li",{parentName:"ul"},"32GB or Larger SD Card - Also faster the better"),(0,a.kt)("li",{parentName:"ul"},"A Laptop with a way to write SD Cards")),(0,a.kt)("p",null,"Let's get started!"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Setup 64-bit Raspian OS Lite on the SD Card"),(0,a.kt)("p",{parentName:"li"},"Make sure you have the Raspberry Pi Imager app from: ",(0,a.kt)("a",{parentName:"p",href:"https://www.raspberrypi.com/software/"},"https://www.raspberrypi.com/software/")),(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},"Insert the SD Card into your computer (Note this process will erase all data on the SD card!)"),(0,a.kt)("li",{parentName:"ol"},"Open the Raspberry Pi Imager App"),(0,a.kt)("li",{parentName:"ol"},'Click the "Choose OS" Button'),(0,a.kt)("li",{parentName:"ol"},'Select "Raspberry Pi OS (other)"'),(0,a.kt)("li",{parentName:"ol"},'Select "Raspberry Pi OS Lite (64-bit)"'),(0,a.kt)("li",{parentName:"ol"},'Click the "Choose Storage" Button'),(0,a.kt)("li",{parentName:"ol"},"Select Your SD Card"),(0,a.kt)("li",{parentName:"ol"},"Click the Gear Icon"),(0,a.kt)("li",{parentName:"ol"},"If prompted if you would like to prefill the Wifi information, select OK"),(0,a.kt)("li",{parentName:"ol"},'Click all the checkboxes, except for "Enable Telemetry"'),(0,a.kt)("li",{parentName:"ol"},"Set the hostname to: cosmos.local"),(0,a.kt)("li",{parentName:"ol"},"You can either use Password auth, or public-key only if your computer is already setup for passwordless SSH"),(0,a.kt)("li",{parentName:"ol"},"Set the username and password. The default username is pi, you should also set a password to make the system secure"),(0,a.kt)("li",{parentName:"ol"},"Fill in your Wifi info, and set the country appropriately (ie. US)"),(0,a.kt)("li",{parentName:"ol"},"Set the correct time zone"),(0,a.kt)("li",{parentName:"ol"},'Click "Save" when everything is filled out'),(0,a.kt)("li",{parentName:"ol"},'Click the "Write" button, Yes to Are You Sure, and Wait for it to complete'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Make sure the Raspberry Pi is NOT powered on")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Remove the SD Card from your computer and insert into the Raspberry Pi")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Apply power to the Raspberry Pi and wait approximately 1 minute for it to boot")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"SSH to your raspberry Pi"),(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Open a terminal window and use ssh to connect to your Pi"),(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},"On Mac / Linux: ssh ",(0,a.kt)("a",{parentName:"li",href:"mailto:pi@cosmos.local"},"pi@cosmos.local")),(0,a.kt)("li",{parentName:"ol"},"On Windows, use Putty to connect. You will probably have to install Bonjour for Windows for .local addresses to work as well."))))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"From SSH, Enter the following commands"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"   sudo sysctl -w vm.max_map_count=262144\n   sudo sysctl -w vm.overcommit_memory=1\n   sudo apt update\n   sudo apt upgrade\n   sudo apt install git -y\n   curl -fsSL https://get.docker.com -o get-docker.sh\n   sudo sh get-docker.sh\n   sudo usermod -aG docker $USER\n   newgrp docker\n   sudo apt-get install libffi-dev libssl-dev python3-dev python3 python3-pip -y\n   sudo pip3 install docker-compose\n   git clone https://github.com/OpenC3/cosmos-project.git cosmos\n   cd cosmos\n   # Edit compose.yaml and remove 127.0.0.1 from the ports section of the openc3-traefik service\n   ./openc3.sh run\n")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"After about 2 minutes, open a web browswer on your computer, and goto: ",(0,a.kt)("a",{parentName:"p",href:"http://cosmos.local:2900"},"http://cosmos.local:2900"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Congratulations! You now have COSMOS running on a Raspberry Pi!"))))}m.isMDXComponent=!0}}]);