"use strict";(self.webpackChunknewdocs_openc_3_com=self.webpackChunknewdocs_openc_3_com||[]).push([[4128],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),l=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,h=d["".concat(c,".").concat(m)]||d[m]||p[m]||i;return n?o.createElement(h,a(a({ref:t},u),{},{components:n})):o.createElement(h,a({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:r,a[1]=s;for(var l=2;l<i;l++)a[l]=n[l];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8495:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var o=n(7462),r=(n(7294),n(3905));const i={title:"Introduction",sidebar_position:0,slug:"/"},a=void 0,s={unversionedId:"introduction",id:"introduction",title:"Introduction",description:"This site aims to be a comprehensive guide to OpenC3 COSMOS. We'll cover topics such",source:"@site/docs/introduction.md",sourceDirName:".",slug:"/",permalink:"/docs/",draft:!1,editUrl:"https://github.com/OpenC3/cosmos/tree/main/docs.openc3.com/docs/introduction.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Introduction",sidebar_position:0,slug:"/"},sidebar:"defaultSidebar",next:{title:"Getting Started",permalink:"/docs/getting-started"}},c={},l=[{value:"So what is COSMOS, exactly?",id:"so-what-is-cosmos-exactly",level:2},{value:"COSMOS Architecture",id:"cosmos-architecture",level:3},{value:"Helpful Hints",id:"helpful-hints",level:2}],u={toc:l},d="wrapper";function p(e){let{components:t,...i}=e;return(0,r.kt)(d,(0,o.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This site aims to be a comprehensive guide to OpenC3 COSMOS. We'll cover topics such\nas getting your configuration up and running, developing test and operations scripts,\nbuilding custom telemetry screens, and give you some advice on participating in the future\ndevelopment of COSMOS itself."),(0,r.kt)("h2",{id:"so-what-is-cosmos-exactly"},"So what is COSMOS, exactly?"),(0,r.kt)("p",null,"COSMOS is a suite of applications that can be used to control a set of embedded systems. These systems can be\nanything from test equipment (power supplies, oscilloscopes, switched power strips, UPS devices, etc), to\ndevelopment boards (Arduinos, Raspberry Pi, Beaglebone, etc), to satellites."),(0,r.kt)("h3",{id:"cosmos-architecture"},"COSMOS Architecture"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"COSMOS Architecture",src:n(3064).Z,width:"1155",height:"538"})),(0,r.kt)("p",null,"COSMOS 5 is a cloud native, containerized, microservice oriented command and control system. All the COSMOS microservices are docker containers which is why Docker is shown containing the entire COSMOS system. The green boxes on the left represent external embedded systems (Targets) which COSMOS connects to. The Redis data store contains the configuration for all the microservices, the current value table, as well as data streams containing decommutated data. The Minio data store contains plugins, targets, configuration data, text logs as well as binary logs of all the raw, decommutated, and reduced data. Users interact with COSMOS from a web browser which routes through the internal Traefik load balancer."),(0,r.kt)("p",null,"Keep reading for an in-depth discussion of each of the COSMOS Tools."),(0,r.kt)("h2",{id:"helpful-hints"},"Helpful Hints"),(0,r.kt)("p",null,"Throughout this guide there are a number of small-but-handy pieces of\ninformation that can make using COSMOS easier, more interesting, and less\nhazardous. Here's what to look out for."),(0,r.kt)("admonition",{title:"ProTips\u2122 help you get more from COSMOS",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"These are tips and tricks that will help you be a COSMOS wizard!")),(0,r.kt)("admonition",{title:"Notes are handy pieces of information",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"These are for the extra tidbits sometimes necessary to understand COSMOS.")),(0,r.kt)("admonition",{title:"Warnings help you not blow things up",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Be aware of these messages if you wish to avoid certain death.")),(0,r.kt)("admonition",{title:"Find a problem in the documentation or in COSMOS itself?",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Both using and hacking on COSMOS should be fun, simple, and easy, so if for\nsome reason you find it's a pain, please ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/OpenC3/cosmos/issues/new/choose"},"create an issue")," on\nGitHub describing your experience so we can make it better.")))}p.isMDXComponent=!0},3064:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/architecture-b22966a8d6360bbb150f96cd4d0583e1.png"}}]);